// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: task_exchange.proto
// Protobuf C++ Version: 5.27.2

#ifndef GOOGLE_PROTOBUF_INCLUDED_task_5fexchange_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_task_5fexchange_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5027002
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_task_5fexchange_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_task_5fexchange_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_task_5fexchange_2eproto;
namespace pb {
class FileTask;
struct FileTaskDefaultTypeInternal;
extern FileTaskDefaultTypeInternal _FileTask_default_instance_;
class ImageTask;
struct ImageTaskDefaultTypeInternal;
extern ImageTaskDefaultTypeInternal _ImageTask_default_instance_;
class OnAIResultGotReply;
struct OnAIResultGotReplyDefaultTypeInternal;
extern OnAIResultGotReplyDefaultTypeInternal _OnAIResultGotReply_default_instance_;
class OnAIResultGotReply_Result;
struct OnAIResultGotReply_ResultDefaultTypeInternal;
extern OnAIResultGotReply_ResultDefaultTypeInternal _OnAIResultGotReply_Result_default_instance_;
class OnAIResultGotReply_ResultWrapper;
struct OnAIResultGotReply_ResultWrapperDefaultTypeInternal;
extern OnAIResultGotReply_ResultWrapperDefaultTypeInternal _OnAIResultGotReply_ResultWrapper_default_instance_;
class OnAIResultGotReply_Result_Rect;
struct OnAIResultGotReply_Result_RectDefaultTypeInternal;
extern OnAIResultGotReply_Result_RectDefaultTypeInternal _OnAIResultGotReply_Result_Rect_default_instance_;
class StreamTask;
struct StreamTaskDefaultTypeInternal;
extern StreamTaskDefaultTypeInternal _StreamTask_default_instance_;
class VideoCommonArgs;
struct VideoCommonArgsDefaultTypeInternal;
extern VideoCommonArgsDefaultTypeInternal _VideoCommonArgs_default_instance_;
}  // namespace pb
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace pb {
enum ImageFormat : int {
  IMAGE_FORMAT_UNKNOWN = 0,
  IMAGE_FORMAT_PNG = 1,
  IMAGE_FORMAT_JPEG = 2,
  ImageFormat_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  ImageFormat_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool ImageFormat_IsValid(int value);
extern const uint32_t ImageFormat_internal_data_[];
constexpr ImageFormat ImageFormat_MIN = static_cast<ImageFormat>(0);
constexpr ImageFormat ImageFormat_MAX = static_cast<ImageFormat>(2);
constexpr int ImageFormat_ARRAYSIZE = 2 + 1;
const ::google::protobuf::EnumDescriptor*
ImageFormat_descriptor();
template <typename T>
const std::string& ImageFormat_Name(T value) {
  static_assert(std::is_same<T, ImageFormat>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to ImageFormat_Name().");
  return ImageFormat_Name(static_cast<ImageFormat>(value));
}
template <>
inline const std::string& ImageFormat_Name(ImageFormat value) {
  return ::google::protobuf::internal::NameOfDenseEnum<ImageFormat_descriptor,
                                                 0, 2>(
      static_cast<int>(value));
}
inline bool ImageFormat_Parse(absl::string_view name, ImageFormat* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ImageFormat>(
      ImageFormat_descriptor(), name, value);
}
enum DetectionAlgorithm : int {
  DETECTION_ALGORITHM_UNKNOWN = 0,
  DETECTION_ALGORITHM_BIRD_LOW_ACCURACY = 1,
  DETECTION_ALGORITHM_BIRD_HUNAN_YONGZHOU = 2,
  DETECTION_ALGORITHM_BIRD_FUJIAN_QUANZHOU = 3,
  DETECTION_ALGORITHM_PLANT_SPECIES = 4,
  DETECTION_ALGORITHM_VEHICLE_INTRUSION_HIGH_ACCURACY = 5,
  DETECTION_ALGORITHM_VEHICLE_INTRUSION_LOW_ACCURACY = 6,
  DETECTION_ALGORITHM_HUMAN_INTRUSION_HIGH_ACCURACY = 7,
  DETECTION_ALGORITHM_HUMAN_INTRUSION_LOW_ACCURACY = 8,
  DETECTION_ALGORITHM_BARE_SOIL_HIGH_ACCURACY = 9,
  DETECTION_ALGORITHM_SHIP_INTRUSION_HIGH_ACCURACY = 10,
  DETECTION_ALGORITHM_FIRE_HIGH_ACCURACY = 11,
  DETECTION_ALGORITHM_ILLEGAL_BUILDING_HIGH_ACCURACY = 12,
  DETECTION_ALGORITHM_ILLEGAL_ANGLING_LOW_ACCURACY = 13,
  DETECTION_ALGORITHM_ILLEGAL_FISHING_LOW_ACCURACY = 14,
  DETECTION_ALGORITHM_GARBAGE_LOW_ACCURACY = 15,
  DETECTION_ALGORITHM_SPECIES_MODEL = 16,
  DETECTION_ALGORITHM_TIE_TA_HUMAN = 17,
  DETECTION_ALGORITHM_TIE_TA_FIREWORK = 18,
  DETECTION_ALGORITHM_TIE_TA_SHIP = 19,
  DETECTION_ALGORITHM_TIE_TA_BARE_SOIL = 20,
  DETECTION_ALGORITHM_TIE_TA_VEHICLE = 21,
  DETECTION_ALGORITHM_TIE_TA_BIRD = 22,
  DetectionAlgorithm_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  DetectionAlgorithm_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool DetectionAlgorithm_IsValid(int value);
extern const uint32_t DetectionAlgorithm_internal_data_[];
constexpr DetectionAlgorithm DetectionAlgorithm_MIN = static_cast<DetectionAlgorithm>(0);
constexpr DetectionAlgorithm DetectionAlgorithm_MAX = static_cast<DetectionAlgorithm>(22);
constexpr int DetectionAlgorithm_ARRAYSIZE = 22 + 1;
const ::google::protobuf::EnumDescriptor*
DetectionAlgorithm_descriptor();
template <typename T>
const std::string& DetectionAlgorithm_Name(T value) {
  static_assert(std::is_same<T, DetectionAlgorithm>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to DetectionAlgorithm_Name().");
  return DetectionAlgorithm_Name(static_cast<DetectionAlgorithm>(value));
}
template <>
inline const std::string& DetectionAlgorithm_Name(DetectionAlgorithm value) {
  return ::google::protobuf::internal::NameOfDenseEnum<DetectionAlgorithm_descriptor,
                                                 0, 22>(
      static_cast<int>(value));
}
inline bool DetectionAlgorithm_Parse(absl::string_view name, DetectionAlgorithm* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DetectionAlgorithm>(
      DetectionAlgorithm_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class VideoCommonArgs final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:pb.VideoCommonArgs) */ {
 public:
  inline VideoCommonArgs() : VideoCommonArgs(nullptr) {}
  ~VideoCommonArgs() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR VideoCommonArgs(
      ::google::protobuf::internal::ConstantInitialized);

  inline VideoCommonArgs(const VideoCommonArgs& from) : VideoCommonArgs(nullptr, from) {}
  inline VideoCommonArgs(VideoCommonArgs&& from) noexcept
      : VideoCommonArgs(nullptr, std::move(from)) {}
  inline VideoCommonArgs& operator=(const VideoCommonArgs& from) {
    CopyFrom(from);
    return *this;
  }
  inline VideoCommonArgs& operator=(VideoCommonArgs&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const VideoCommonArgs& default_instance() {
    return *internal_default_instance();
  }
  static inline const VideoCommonArgs* internal_default_instance() {
    return reinterpret_cast<const VideoCommonArgs*>(
        &_VideoCommonArgs_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(VideoCommonArgs& a, VideoCommonArgs& b) { a.Swap(&b); }
  inline void Swap(VideoCommonArgs* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(VideoCommonArgs* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  VideoCommonArgs* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<VideoCommonArgs>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const VideoCommonArgs& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const VideoCommonArgs& from) { VideoCommonArgs::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(VideoCommonArgs* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "pb.VideoCommonArgs"; }

 protected:
  explicit VideoCommonArgs(::google::protobuf::Arena* arena);
  VideoCommonArgs(::google::protobuf::Arena* arena, const VideoCommonArgs& from);
  VideoCommonArgs(::google::protobuf::Arena* arena, VideoCommonArgs&& from) noexcept
      : VideoCommonArgs(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFrameStepFieldNumber = 1,
    kSkipStepFieldNumber = 2,
    kVideoRecordDurationInSecondsFieldNumber = 3,
  };
  // uint32 frame_step = 1;
  void clear_frame_step() ;
  ::uint32_t frame_step() const;
  void set_frame_step(::uint32_t value);

  private:
  ::uint32_t _internal_frame_step() const;
  void _internal_set_frame_step(::uint32_t value);

  public:
  // uint32 skip_step = 2;
  void clear_skip_step() ;
  ::uint32_t skip_step() const;
  void set_skip_step(::uint32_t value);

  private:
  ::uint32_t _internal_skip_step() const;
  void _internal_set_skip_step(::uint32_t value);

  public:
  // uint32 video_record_duration_in_seconds = 3;
  void clear_video_record_duration_in_seconds() ;
  ::uint32_t video_record_duration_in_seconds() const;
  void set_video_record_duration_in_seconds(::uint32_t value);

  private:
  ::uint32_t _internal_video_record_duration_in_seconds() const;
  void _internal_set_video_record_duration_in_seconds(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:pb.VideoCommonArgs)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_VideoCommonArgs_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const VideoCommonArgs& from_msg);
    ::uint32_t frame_step_;
    ::uint32_t skip_step_;
    ::uint32_t video_record_duration_in_seconds_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_task_5fexchange_2eproto;
};
// -------------------------------------------------------------------

class OnAIResultGotReply_Result_Rect final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:pb.OnAIResultGotReply.Result.Rect) */ {
 public:
  inline OnAIResultGotReply_Result_Rect() : OnAIResultGotReply_Result_Rect(nullptr) {}
  ~OnAIResultGotReply_Result_Rect() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR OnAIResultGotReply_Result_Rect(
      ::google::protobuf::internal::ConstantInitialized);

  inline OnAIResultGotReply_Result_Rect(const OnAIResultGotReply_Result_Rect& from) : OnAIResultGotReply_Result_Rect(nullptr, from) {}
  inline OnAIResultGotReply_Result_Rect(OnAIResultGotReply_Result_Rect&& from) noexcept
      : OnAIResultGotReply_Result_Rect(nullptr, std::move(from)) {}
  inline OnAIResultGotReply_Result_Rect& operator=(const OnAIResultGotReply_Result_Rect& from) {
    CopyFrom(from);
    return *this;
  }
  inline OnAIResultGotReply_Result_Rect& operator=(OnAIResultGotReply_Result_Rect&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const OnAIResultGotReply_Result_Rect& default_instance() {
    return *internal_default_instance();
  }
  static inline const OnAIResultGotReply_Result_Rect* internal_default_instance() {
    return reinterpret_cast<const OnAIResultGotReply_Result_Rect*>(
        &_OnAIResultGotReply_Result_Rect_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(OnAIResultGotReply_Result_Rect& a, OnAIResultGotReply_Result_Rect& b) { a.Swap(&b); }
  inline void Swap(OnAIResultGotReply_Result_Rect* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(OnAIResultGotReply_Result_Rect* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  OnAIResultGotReply_Result_Rect* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<OnAIResultGotReply_Result_Rect>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const OnAIResultGotReply_Result_Rect& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const OnAIResultGotReply_Result_Rect& from) { OnAIResultGotReply_Result_Rect::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(OnAIResultGotReply_Result_Rect* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "pb.OnAIResultGotReply.Result.Rect"; }

 protected:
  explicit OnAIResultGotReply_Result_Rect(::google::protobuf::Arena* arena);
  OnAIResultGotReply_Result_Rect(::google::protobuf::Arena* arena, const OnAIResultGotReply_Result_Rect& from);
  OnAIResultGotReply_Result_Rect(::google::protobuf::Arena* arena, OnAIResultGotReply_Result_Rect&& from) noexcept
      : OnAIResultGotReply_Result_Rect(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMinXFieldNumber = 1,
    kMaxXFieldNumber = 2,
    kMinYFieldNumber = 3,
    kMaxYFieldNumber = 4,
  };
  // uint32 minX = 1;
  void clear_minx() ;
  ::uint32_t minx() const;
  void set_minx(::uint32_t value);

  private:
  ::uint32_t _internal_minx() const;
  void _internal_set_minx(::uint32_t value);

  public:
  // uint32 maxX = 2;
  void clear_maxx() ;
  ::uint32_t maxx() const;
  void set_maxx(::uint32_t value);

  private:
  ::uint32_t _internal_maxx() const;
  void _internal_set_maxx(::uint32_t value);

  public:
  // uint32 minY = 3;
  void clear_miny() ;
  ::uint32_t miny() const;
  void set_miny(::uint32_t value);

  private:
  ::uint32_t _internal_miny() const;
  void _internal_set_miny(::uint32_t value);

  public:
  // uint32 maxY = 4;
  void clear_maxy() ;
  ::uint32_t maxy() const;
  void set_maxy(::uint32_t value);

  private:
  ::uint32_t _internal_maxy() const;
  void _internal_set_maxy(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:pb.OnAIResultGotReply.Result.Rect)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_OnAIResultGotReply_Result_Rect_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const OnAIResultGotReply_Result_Rect& from_msg);
    ::uint32_t minx_;
    ::uint32_t maxx_;
    ::uint32_t miny_;
    ::uint32_t maxy_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_task_5fexchange_2eproto;
};
// -------------------------------------------------------------------

class ImageTask final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:pb.ImageTask) */ {
 public:
  inline ImageTask() : ImageTask(nullptr) {}
  ~ImageTask() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ImageTask(
      ::google::protobuf::internal::ConstantInitialized);

  inline ImageTask(const ImageTask& from) : ImageTask(nullptr, from) {}
  inline ImageTask(ImageTask&& from) noexcept
      : ImageTask(nullptr, std::move(from)) {}
  inline ImageTask& operator=(const ImageTask& from) {
    CopyFrom(from);
    return *this;
  }
  inline ImageTask& operator=(ImageTask&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ImageTask& default_instance() {
    return *internal_default_instance();
  }
  static inline const ImageTask* internal_default_instance() {
    return reinterpret_cast<const ImageTask*>(
        &_ImageTask_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(ImageTask& a, ImageTask& b) { a.Swap(&b); }
  inline void Swap(ImageTask* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ImageTask* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ImageTask* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<ImageTask>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ImageTask& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ImageTask& from) { ImageTask::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ImageTask* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "pb.ImageTask"; }

 protected:
  explicit ImageTask(::google::protobuf::Arena* arena);
  ImageTask(::google::protobuf::Arena* arena, const ImageTask& from);
  ImageTask(::google::protobuf::Arena* arena, ImageTask&& from) noexcept
      : ImageTask(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAlgorithmsFieldNumber = 1,
    kImgFieldNumber = 3,
    kImgFormatFieldNumber = 2,
  };
  // repeated .pb.DetectionAlgorithm algorithms = 1;
  int algorithms_size() const;
  private:
  int _internal_algorithms_size() const;

  public:
  void clear_algorithms() ;
  public:
  ::pb::DetectionAlgorithm algorithms(int index) const;
  void set_algorithms(int index, ::pb::DetectionAlgorithm value);
  void add_algorithms(::pb::DetectionAlgorithm value);
  const ::google::protobuf::RepeatedField<int>& algorithms() const;
  ::google::protobuf::RepeatedField<int>* mutable_algorithms();

  private:
  const ::google::protobuf::RepeatedField<int>& _internal_algorithms() const;
  ::google::protobuf::RepeatedField<int>* _internal_mutable_algorithms();

  public:
  // bytes img = 3;
  void clear_img() ;
  const std::string& img() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_img(Arg_&& arg, Args_... args);
  std::string* mutable_img();
  PROTOBUF_NODISCARD std::string* release_img();
  void set_allocated_img(std::string* value);

  private:
  const std::string& _internal_img() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_img(
      const std::string& value);
  std::string* _internal_mutable_img();

  public:
  // .pb.ImageFormat img_format = 2;
  void clear_img_format() ;
  ::pb::ImageFormat img_format() const;
  void set_img_format(::pb::ImageFormat value);

  private:
  ::pb::ImageFormat _internal_img_format() const;
  void _internal_set_img_format(::pb::ImageFormat value);

  public:
  // @@protoc_insertion_point(class_scope:pb.ImageTask)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ImageTask_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ImageTask& from_msg);
    ::google::protobuf::RepeatedField<int> algorithms_;
    mutable ::google::protobuf::internal::CachedSize _algorithms_cached_byte_size_;
    ::google::protobuf::internal::ArenaStringPtr img_;
    int img_format_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_task_5fexchange_2eproto;
};
// -------------------------------------------------------------------

class StreamTask final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:pb.StreamTask) */ {
 public:
  inline StreamTask() : StreamTask(nullptr) {}
  ~StreamTask() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR StreamTask(
      ::google::protobuf::internal::ConstantInitialized);

  inline StreamTask(const StreamTask& from) : StreamTask(nullptr, from) {}
  inline StreamTask(StreamTask&& from) noexcept
      : StreamTask(nullptr, std::move(from)) {}
  inline StreamTask& operator=(const StreamTask& from) {
    CopyFrom(from);
    return *this;
  }
  inline StreamTask& operator=(StreamTask&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StreamTask& default_instance() {
    return *internal_default_instance();
  }
  static inline const StreamTask* internal_default_instance() {
    return reinterpret_cast<const StreamTask*>(
        &_StreamTask_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(StreamTask& a, StreamTask& b) { a.Swap(&b); }
  inline void Swap(StreamTask* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StreamTask* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StreamTask* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<StreamTask>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const StreamTask& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const StreamTask& from) { StreamTask::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(StreamTask* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "pb.StreamTask"; }

 protected:
  explicit StreamTask(::google::protobuf::Arena* arena);
  StreamTask(::google::protobuf::Arena* arena, const StreamTask& from);
  StreamTask(::google::protobuf::Arena* arena, StreamTask&& from) noexcept
      : StreamTask(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAlgorithmsFieldNumber = 2,
    kStreamUrlFieldNumber = 3,
    kArgsFieldNumber = 1,
  };
  // repeated .pb.DetectionAlgorithm algorithms = 2;
  int algorithms_size() const;
  private:
  int _internal_algorithms_size() const;

  public:
  void clear_algorithms() ;
  public:
  ::pb::DetectionAlgorithm algorithms(int index) const;
  void set_algorithms(int index, ::pb::DetectionAlgorithm value);
  void add_algorithms(::pb::DetectionAlgorithm value);
  const ::google::protobuf::RepeatedField<int>& algorithms() const;
  ::google::protobuf::RepeatedField<int>* mutable_algorithms();

  private:
  const ::google::protobuf::RepeatedField<int>& _internal_algorithms() const;
  ::google::protobuf::RepeatedField<int>* _internal_mutable_algorithms();

  public:
  // string stream_url = 3;
  void clear_stream_url() ;
  const std::string& stream_url() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_stream_url(Arg_&& arg, Args_... args);
  std::string* mutable_stream_url();
  PROTOBUF_NODISCARD std::string* release_stream_url();
  void set_allocated_stream_url(std::string* value);

  private:
  const std::string& _internal_stream_url() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_stream_url(
      const std::string& value);
  std::string* _internal_mutable_stream_url();

  public:
  // .pb.VideoCommonArgs args = 1;
  bool has_args() const;
  void clear_args() ;
  const ::pb::VideoCommonArgs& args() const;
  PROTOBUF_NODISCARD ::pb::VideoCommonArgs* release_args();
  ::pb::VideoCommonArgs* mutable_args();
  void set_allocated_args(::pb::VideoCommonArgs* value);
  void unsafe_arena_set_allocated_args(::pb::VideoCommonArgs* value);
  ::pb::VideoCommonArgs* unsafe_arena_release_args();

  private:
  const ::pb::VideoCommonArgs& _internal_args() const;
  ::pb::VideoCommonArgs* _internal_mutable_args();

  public:
  // @@protoc_insertion_point(class_scope:pb.StreamTask)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      32, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_StreamTask_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const StreamTask& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedField<int> algorithms_;
    mutable ::google::protobuf::internal::CachedSize _algorithms_cached_byte_size_;
    ::google::protobuf::internal::ArenaStringPtr stream_url_;
    ::pb::VideoCommonArgs* args_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_task_5fexchange_2eproto;
};
// -------------------------------------------------------------------

class OnAIResultGotReply_Result final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:pb.OnAIResultGotReply.Result) */ {
 public:
  inline OnAIResultGotReply_Result() : OnAIResultGotReply_Result(nullptr) {}
  ~OnAIResultGotReply_Result() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR OnAIResultGotReply_Result(
      ::google::protobuf::internal::ConstantInitialized);

  inline OnAIResultGotReply_Result(const OnAIResultGotReply_Result& from) : OnAIResultGotReply_Result(nullptr, from) {}
  inline OnAIResultGotReply_Result(OnAIResultGotReply_Result&& from) noexcept
      : OnAIResultGotReply_Result(nullptr, std::move(from)) {}
  inline OnAIResultGotReply_Result& operator=(const OnAIResultGotReply_Result& from) {
    CopyFrom(from);
    return *this;
  }
  inline OnAIResultGotReply_Result& operator=(OnAIResultGotReply_Result&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const OnAIResultGotReply_Result& default_instance() {
    return *internal_default_instance();
  }
  static inline const OnAIResultGotReply_Result* internal_default_instance() {
    return reinterpret_cast<const OnAIResultGotReply_Result*>(
        &_OnAIResultGotReply_Result_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(OnAIResultGotReply_Result& a, OnAIResultGotReply_Result& b) { a.Swap(&b); }
  inline void Swap(OnAIResultGotReply_Result* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(OnAIResultGotReply_Result* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  OnAIResultGotReply_Result* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<OnAIResultGotReply_Result>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const OnAIResultGotReply_Result& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const OnAIResultGotReply_Result& from) { OnAIResultGotReply_Result::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(OnAIResultGotReply_Result* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "pb.OnAIResultGotReply.Result"; }

 protected:
  explicit OnAIResultGotReply_Result(::google::protobuf::Arena* arena);
  OnAIResultGotReply_Result(::google::protobuf::Arena* arena, const OnAIResultGotReply_Result& from);
  OnAIResultGotReply_Result(::google::protobuf::Arena* arena, OnAIResultGotReply_Result&& from) noexcept
      : OnAIResultGotReply_Result(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using Rect = OnAIResultGotReply_Result_Rect;

  // accessors -------------------------------------------------------
  enum : int {
    kRectFieldNumber = 1,
    kProbFieldNumber = 3,
    kLabelFieldNumber = 2,
  };
  // .pb.OnAIResultGotReply.Result.Rect rect = 1;
  bool has_rect() const;
  void clear_rect() ;
  const ::pb::OnAIResultGotReply_Result_Rect& rect() const;
  PROTOBUF_NODISCARD ::pb::OnAIResultGotReply_Result_Rect* release_rect();
  ::pb::OnAIResultGotReply_Result_Rect* mutable_rect();
  void set_allocated_rect(::pb::OnAIResultGotReply_Result_Rect* value);
  void unsafe_arena_set_allocated_rect(::pb::OnAIResultGotReply_Result_Rect* value);
  ::pb::OnAIResultGotReply_Result_Rect* unsafe_arena_release_rect();

  private:
  const ::pb::OnAIResultGotReply_Result_Rect& _internal_rect() const;
  ::pb::OnAIResultGotReply_Result_Rect* _internal_mutable_rect();

  public:
  // double prob = 3;
  void clear_prob() ;
  double prob() const;
  void set_prob(double value);

  private:
  double _internal_prob() const;
  void _internal_set_prob(double value);

  public:
  // uint32 label = 2;
  void clear_label() ;
  ::uint32_t label() const;
  void set_label(::uint32_t value);

  private:
  ::uint32_t _internal_label() const;
  void _internal_set_label(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:pb.OnAIResultGotReply.Result)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_OnAIResultGotReply_Result_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const OnAIResultGotReply_Result& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::pb::OnAIResultGotReply_Result_Rect* rect_;
    double prob_;
    ::uint32_t label_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_task_5fexchange_2eproto;
};
// -------------------------------------------------------------------

class FileTask final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:pb.FileTask) */ {
 public:
  inline FileTask() : FileTask(nullptr) {}
  ~FileTask() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR FileTask(
      ::google::protobuf::internal::ConstantInitialized);

  inline FileTask(const FileTask& from) : FileTask(nullptr, from) {}
  inline FileTask(FileTask&& from) noexcept
      : FileTask(nullptr, std::move(from)) {}
  inline FileTask& operator=(const FileTask& from) {
    CopyFrom(from);
    return *this;
  }
  inline FileTask& operator=(FileTask&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FileTask& default_instance() {
    return *internal_default_instance();
  }
  static inline const FileTask* internal_default_instance() {
    return reinterpret_cast<const FileTask*>(
        &_FileTask_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(FileTask& a, FileTask& b) { a.Swap(&b); }
  inline void Swap(FileTask* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FileTask* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FileTask* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<FileTask>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FileTask& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const FileTask& from) { FileTask::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(FileTask* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "pb.FileTask"; }

 protected:
  explicit FileTask(::google::protobuf::Arena* arena);
  FileTask(::google::protobuf::Arena* arena, const FileTask& from);
  FileTask(::google::protobuf::Arena* arena, FileTask&& from) noexcept
      : FileTask(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAlgorithmsFieldNumber = 2,
    kFilePathFieldNumber = 3,
    kArgsFieldNumber = 1,
  };
  // repeated .pb.DetectionAlgorithm algorithms = 2;
  int algorithms_size() const;
  private:
  int _internal_algorithms_size() const;

  public:
  void clear_algorithms() ;
  public:
  ::pb::DetectionAlgorithm algorithms(int index) const;
  void set_algorithms(int index, ::pb::DetectionAlgorithm value);
  void add_algorithms(::pb::DetectionAlgorithm value);
  const ::google::protobuf::RepeatedField<int>& algorithms() const;
  ::google::protobuf::RepeatedField<int>* mutable_algorithms();

  private:
  const ::google::protobuf::RepeatedField<int>& _internal_algorithms() const;
  ::google::protobuf::RepeatedField<int>* _internal_mutable_algorithms();

  public:
  // string file_path = 3;
  void clear_file_path() ;
  const std::string& file_path() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_file_path(Arg_&& arg, Args_... args);
  std::string* mutable_file_path();
  PROTOBUF_NODISCARD std::string* release_file_path();
  void set_allocated_file_path(std::string* value);

  private:
  const std::string& _internal_file_path() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_file_path(
      const std::string& value);
  std::string* _internal_mutable_file_path();

  public:
  // .pb.VideoCommonArgs args = 1;
  bool has_args() const;
  void clear_args() ;
  const ::pb::VideoCommonArgs& args() const;
  PROTOBUF_NODISCARD ::pb::VideoCommonArgs* release_args();
  ::pb::VideoCommonArgs* mutable_args();
  void set_allocated_args(::pb::VideoCommonArgs* value);
  void unsafe_arena_set_allocated_args(::pb::VideoCommonArgs* value);
  ::pb::VideoCommonArgs* unsafe_arena_release_args();

  private:
  const ::pb::VideoCommonArgs& _internal_args() const;
  ::pb::VideoCommonArgs* _internal_mutable_args();

  public:
  // @@protoc_insertion_point(class_scope:pb.FileTask)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      29, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_FileTask_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const FileTask& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedField<int> algorithms_;
    mutable ::google::protobuf::internal::CachedSize _algorithms_cached_byte_size_;
    ::google::protobuf::internal::ArenaStringPtr file_path_;
    ::pb::VideoCommonArgs* args_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_task_5fexchange_2eproto;
};
// -------------------------------------------------------------------

class OnAIResultGotReply_ResultWrapper final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:pb.OnAIResultGotReply.ResultWrapper) */ {
 public:
  inline OnAIResultGotReply_ResultWrapper() : OnAIResultGotReply_ResultWrapper(nullptr) {}
  ~OnAIResultGotReply_ResultWrapper() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR OnAIResultGotReply_ResultWrapper(
      ::google::protobuf::internal::ConstantInitialized);

  inline OnAIResultGotReply_ResultWrapper(const OnAIResultGotReply_ResultWrapper& from) : OnAIResultGotReply_ResultWrapper(nullptr, from) {}
  inline OnAIResultGotReply_ResultWrapper(OnAIResultGotReply_ResultWrapper&& from) noexcept
      : OnAIResultGotReply_ResultWrapper(nullptr, std::move(from)) {}
  inline OnAIResultGotReply_ResultWrapper& operator=(const OnAIResultGotReply_ResultWrapper& from) {
    CopyFrom(from);
    return *this;
  }
  inline OnAIResultGotReply_ResultWrapper& operator=(OnAIResultGotReply_ResultWrapper&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const OnAIResultGotReply_ResultWrapper& default_instance() {
    return *internal_default_instance();
  }
  static inline const OnAIResultGotReply_ResultWrapper* internal_default_instance() {
    return reinterpret_cast<const OnAIResultGotReply_ResultWrapper*>(
        &_OnAIResultGotReply_ResultWrapper_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(OnAIResultGotReply_ResultWrapper& a, OnAIResultGotReply_ResultWrapper& b) { a.Swap(&b); }
  inline void Swap(OnAIResultGotReply_ResultWrapper* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(OnAIResultGotReply_ResultWrapper* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  OnAIResultGotReply_ResultWrapper* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<OnAIResultGotReply_ResultWrapper>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const OnAIResultGotReply_ResultWrapper& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const OnAIResultGotReply_ResultWrapper& from) { OnAIResultGotReply_ResultWrapper::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(OnAIResultGotReply_ResultWrapper* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "pb.OnAIResultGotReply.ResultWrapper"; }

 protected:
  explicit OnAIResultGotReply_ResultWrapper(::google::protobuf::Arena* arena);
  OnAIResultGotReply_ResultWrapper(::google::protobuf::Arena* arena, const OnAIResultGotReply_ResultWrapper& from);
  OnAIResultGotReply_ResultWrapper(::google::protobuf::Arena* arena, OnAIResultGotReply_ResultWrapper&& from) noexcept
      : OnAIResultGotReply_ResultWrapper(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRsFieldNumber = 1,
    kAlgoFieldNumber = 2,
  };
  // repeated .pb.OnAIResultGotReply.Result rs = 1;
  int rs_size() const;
  private:
  int _internal_rs_size() const;

  public:
  void clear_rs() ;
  ::pb::OnAIResultGotReply_Result* mutable_rs(int index);
  ::google::protobuf::RepeatedPtrField<::pb::OnAIResultGotReply_Result>* mutable_rs();

  private:
  const ::google::protobuf::RepeatedPtrField<::pb::OnAIResultGotReply_Result>& _internal_rs() const;
  ::google::protobuf::RepeatedPtrField<::pb::OnAIResultGotReply_Result>* _internal_mutable_rs();
  public:
  const ::pb::OnAIResultGotReply_Result& rs(int index) const;
  ::pb::OnAIResultGotReply_Result* add_rs();
  const ::google::protobuf::RepeatedPtrField<::pb::OnAIResultGotReply_Result>& rs() const;
  // .pb.DetectionAlgorithm algo = 2;
  void clear_algo() ;
  ::pb::DetectionAlgorithm algo() const;
  void set_algo(::pb::DetectionAlgorithm value);

  private:
  ::pb::DetectionAlgorithm _internal_algo() const;
  void _internal_set_algo(::pb::DetectionAlgorithm value);

  public:
  // @@protoc_insertion_point(class_scope:pb.OnAIResultGotReply.ResultWrapper)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_OnAIResultGotReply_ResultWrapper_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const OnAIResultGotReply_ResultWrapper& from_msg);
    ::google::protobuf::RepeatedPtrField< ::pb::OnAIResultGotReply_Result > rs_;
    int algo_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_task_5fexchange_2eproto;
};
// -------------------------------------------------------------------

class OnAIResultGotReply final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:pb.OnAIResultGotReply) */ {
 public:
  inline OnAIResultGotReply() : OnAIResultGotReply(nullptr) {}
  ~OnAIResultGotReply() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR OnAIResultGotReply(
      ::google::protobuf::internal::ConstantInitialized);

  inline OnAIResultGotReply(const OnAIResultGotReply& from) : OnAIResultGotReply(nullptr, from) {}
  inline OnAIResultGotReply(OnAIResultGotReply&& from) noexcept
      : OnAIResultGotReply(nullptr, std::move(from)) {}
  inline OnAIResultGotReply& operator=(const OnAIResultGotReply& from) {
    CopyFrom(from);
    return *this;
  }
  inline OnAIResultGotReply& operator=(OnAIResultGotReply&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const OnAIResultGotReply& default_instance() {
    return *internal_default_instance();
  }
  static inline const OnAIResultGotReply* internal_default_instance() {
    return reinterpret_cast<const OnAIResultGotReply*>(
        &_OnAIResultGotReply_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(OnAIResultGotReply& a, OnAIResultGotReply& b) { a.Swap(&b); }
  inline void Swap(OnAIResultGotReply* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(OnAIResultGotReply* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  OnAIResultGotReply* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<OnAIResultGotReply>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const OnAIResultGotReply& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const OnAIResultGotReply& from) { OnAIResultGotReply::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(OnAIResultGotReply* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "pb.OnAIResultGotReply"; }

 protected:
  explicit OnAIResultGotReply(::google::protobuf::Arena* arena);
  OnAIResultGotReply(::google::protobuf::Arena* arena, const OnAIResultGotReply& from);
  OnAIResultGotReply(::google::protobuf::Arena* arena, OnAIResultGotReply&& from) noexcept
      : OnAIResultGotReply(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using Result = OnAIResultGotReply_Result;
  using ResultWrapper = OnAIResultGotReply_ResultWrapper;

  // accessors -------------------------------------------------------
  enum : int {
    kResultFieldNumber = 3,
    kImageDataFieldNumber = 2,
    kFmtFieldNumber = 1,
  };
  // repeated .pb.OnAIResultGotReply.ResultWrapper result = 3;
  int result_size() const;
  private:
  int _internal_result_size() const;

  public:
  void clear_result() ;
  ::pb::OnAIResultGotReply_ResultWrapper* mutable_result(int index);
  ::google::protobuf::RepeatedPtrField<::pb::OnAIResultGotReply_ResultWrapper>* mutable_result();

  private:
  const ::google::protobuf::RepeatedPtrField<::pb::OnAIResultGotReply_ResultWrapper>& _internal_result() const;
  ::google::protobuf::RepeatedPtrField<::pb::OnAIResultGotReply_ResultWrapper>* _internal_mutable_result();
  public:
  const ::pb::OnAIResultGotReply_ResultWrapper& result(int index) const;
  ::pb::OnAIResultGotReply_ResultWrapper* add_result();
  const ::google::protobuf::RepeatedPtrField<::pb::OnAIResultGotReply_ResultWrapper>& result() const;
  // bytes imageData = 2;
  void clear_imagedata() ;
  const std::string& imagedata() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_imagedata(Arg_&& arg, Args_... args);
  std::string* mutable_imagedata();
  PROTOBUF_NODISCARD std::string* release_imagedata();
  void set_allocated_imagedata(std::string* value);

  private:
  const std::string& _internal_imagedata() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_imagedata(
      const std::string& value);
  std::string* _internal_mutable_imagedata();

  public:
  // .pb.ImageFormat fmt = 1;
  void clear_fmt() ;
  ::pb::ImageFormat fmt() const;
  void set_fmt(::pb::ImageFormat value);

  private:
  ::pb::ImageFormat _internal_fmt() const;
  void _internal_set_fmt(::pb::ImageFormat value);

  public:
  // @@protoc_insertion_point(class_scope:pb.OnAIResultGotReply)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_OnAIResultGotReply_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const OnAIResultGotReply& from_msg);
    ::google::protobuf::RepeatedPtrField< ::pb::OnAIResultGotReply_ResultWrapper > result_;
    ::google::protobuf::internal::ArenaStringPtr imagedata_;
    int fmt_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_task_5fexchange_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// VideoCommonArgs

// uint32 frame_step = 1;
inline void VideoCommonArgs::clear_frame_step() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.frame_step_ = 0u;
}
inline ::uint32_t VideoCommonArgs::frame_step() const {
  // @@protoc_insertion_point(field_get:pb.VideoCommonArgs.frame_step)
  return _internal_frame_step();
}
inline void VideoCommonArgs::set_frame_step(::uint32_t value) {
  _internal_set_frame_step(value);
  // @@protoc_insertion_point(field_set:pb.VideoCommonArgs.frame_step)
}
inline ::uint32_t VideoCommonArgs::_internal_frame_step() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.frame_step_;
}
inline void VideoCommonArgs::_internal_set_frame_step(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.frame_step_ = value;
}

// uint32 skip_step = 2;
inline void VideoCommonArgs::clear_skip_step() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.skip_step_ = 0u;
}
inline ::uint32_t VideoCommonArgs::skip_step() const {
  // @@protoc_insertion_point(field_get:pb.VideoCommonArgs.skip_step)
  return _internal_skip_step();
}
inline void VideoCommonArgs::set_skip_step(::uint32_t value) {
  _internal_set_skip_step(value);
  // @@protoc_insertion_point(field_set:pb.VideoCommonArgs.skip_step)
}
inline ::uint32_t VideoCommonArgs::_internal_skip_step() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.skip_step_;
}
inline void VideoCommonArgs::_internal_set_skip_step(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.skip_step_ = value;
}

// uint32 video_record_duration_in_seconds = 3;
inline void VideoCommonArgs::clear_video_record_duration_in_seconds() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.video_record_duration_in_seconds_ = 0u;
}
inline ::uint32_t VideoCommonArgs::video_record_duration_in_seconds() const {
  // @@protoc_insertion_point(field_get:pb.VideoCommonArgs.video_record_duration_in_seconds)
  return _internal_video_record_duration_in_seconds();
}
inline void VideoCommonArgs::set_video_record_duration_in_seconds(::uint32_t value) {
  _internal_set_video_record_duration_in_seconds(value);
  // @@protoc_insertion_point(field_set:pb.VideoCommonArgs.video_record_duration_in_seconds)
}
inline ::uint32_t VideoCommonArgs::_internal_video_record_duration_in_seconds() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.video_record_duration_in_seconds_;
}
inline void VideoCommonArgs::_internal_set_video_record_duration_in_seconds(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.video_record_duration_in_seconds_ = value;
}

// -------------------------------------------------------------------

// StreamTask

// .pb.VideoCommonArgs args = 1;
inline bool StreamTask::has_args() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.args_ != nullptr);
  return value;
}
inline void StreamTask::clear_args() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.args_ != nullptr) _impl_.args_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::pb::VideoCommonArgs& StreamTask::_internal_args() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::pb::VideoCommonArgs* p = _impl_.args_;
  return p != nullptr ? *p : reinterpret_cast<const ::pb::VideoCommonArgs&>(::pb::_VideoCommonArgs_default_instance_);
}
inline const ::pb::VideoCommonArgs& StreamTask::args() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:pb.StreamTask.args)
  return _internal_args();
}
inline void StreamTask::unsafe_arena_set_allocated_args(::pb::VideoCommonArgs* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.args_);
  }
  _impl_.args_ = reinterpret_cast<::pb::VideoCommonArgs*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pb.StreamTask.args)
}
inline ::pb::VideoCommonArgs* StreamTask::release_args() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::pb::VideoCommonArgs* released = _impl_.args_;
  _impl_.args_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::pb::VideoCommonArgs* StreamTask::unsafe_arena_release_args() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:pb.StreamTask.args)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::pb::VideoCommonArgs* temp = _impl_.args_;
  _impl_.args_ = nullptr;
  return temp;
}
inline ::pb::VideoCommonArgs* StreamTask::_internal_mutable_args() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.args_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::pb::VideoCommonArgs>(GetArena());
    _impl_.args_ = reinterpret_cast<::pb::VideoCommonArgs*>(p);
  }
  return _impl_.args_;
}
inline ::pb::VideoCommonArgs* StreamTask::mutable_args() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::pb::VideoCommonArgs* _msg = _internal_mutable_args();
  // @@protoc_insertion_point(field_mutable:pb.StreamTask.args)
  return _msg;
}
inline void StreamTask::set_allocated_args(::pb::VideoCommonArgs* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.args_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.args_ = reinterpret_cast<::pb::VideoCommonArgs*>(value);
  // @@protoc_insertion_point(field_set_allocated:pb.StreamTask.args)
}

// repeated .pb.DetectionAlgorithm algorithms = 2;
inline int StreamTask::_internal_algorithms_size() const {
  return _internal_algorithms().size();
}
inline int StreamTask::algorithms_size() const {
  return _internal_algorithms_size();
}
inline void StreamTask::clear_algorithms() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.algorithms_.Clear();
}
inline ::pb::DetectionAlgorithm StreamTask::algorithms(int index) const {
  // @@protoc_insertion_point(field_get:pb.StreamTask.algorithms)
  return static_cast<::pb::DetectionAlgorithm>(_internal_algorithms().Get(index));
}
inline void StreamTask::set_algorithms(int index, ::pb::DetectionAlgorithm value) {
  _internal_mutable_algorithms()->Set(index, value);
  // @@protoc_insertion_point(field_set:pb.StreamTask.algorithms)
}
inline void StreamTask::add_algorithms(::pb::DetectionAlgorithm value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_algorithms()->Add(value);
  // @@protoc_insertion_point(field_add:pb.StreamTask.algorithms)
}
inline const ::google::protobuf::RepeatedField<int>& StreamTask::algorithms() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:pb.StreamTask.algorithms)
  return _internal_algorithms();
}
inline ::google::protobuf::RepeatedField<int>* StreamTask::mutable_algorithms()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:pb.StreamTask.algorithms)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_algorithms();
}
inline const ::google::protobuf::RepeatedField<int>& StreamTask::_internal_algorithms()
    const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.algorithms_;
}
inline ::google::protobuf::RepeatedField<int>* StreamTask::_internal_mutable_algorithms() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.algorithms_;
}

// string stream_url = 3;
inline void StreamTask::clear_stream_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.stream_url_.ClearToEmpty();
}
inline const std::string& StreamTask::stream_url() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:pb.StreamTask.stream_url)
  return _internal_stream_url();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void StreamTask::set_stream_url(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.stream_url_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:pb.StreamTask.stream_url)
}
inline std::string* StreamTask::mutable_stream_url() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_stream_url();
  // @@protoc_insertion_point(field_mutable:pb.StreamTask.stream_url)
  return _s;
}
inline const std::string& StreamTask::_internal_stream_url() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.stream_url_.Get();
}
inline void StreamTask::_internal_set_stream_url(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.stream_url_.Set(value, GetArena());
}
inline std::string* StreamTask::_internal_mutable_stream_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.stream_url_.Mutable( GetArena());
}
inline std::string* StreamTask::release_stream_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:pb.StreamTask.stream_url)
  return _impl_.stream_url_.Release();
}
inline void StreamTask::set_allocated_stream_url(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.stream_url_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.stream_url_.IsDefault()) {
          _impl_.stream_url_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:pb.StreamTask.stream_url)
}

// -------------------------------------------------------------------

// FileTask

// .pb.VideoCommonArgs args = 1;
inline bool FileTask::has_args() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.args_ != nullptr);
  return value;
}
inline void FileTask::clear_args() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.args_ != nullptr) _impl_.args_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::pb::VideoCommonArgs& FileTask::_internal_args() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::pb::VideoCommonArgs* p = _impl_.args_;
  return p != nullptr ? *p : reinterpret_cast<const ::pb::VideoCommonArgs&>(::pb::_VideoCommonArgs_default_instance_);
}
inline const ::pb::VideoCommonArgs& FileTask::args() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:pb.FileTask.args)
  return _internal_args();
}
inline void FileTask::unsafe_arena_set_allocated_args(::pb::VideoCommonArgs* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.args_);
  }
  _impl_.args_ = reinterpret_cast<::pb::VideoCommonArgs*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pb.FileTask.args)
}
inline ::pb::VideoCommonArgs* FileTask::release_args() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::pb::VideoCommonArgs* released = _impl_.args_;
  _impl_.args_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::pb::VideoCommonArgs* FileTask::unsafe_arena_release_args() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:pb.FileTask.args)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::pb::VideoCommonArgs* temp = _impl_.args_;
  _impl_.args_ = nullptr;
  return temp;
}
inline ::pb::VideoCommonArgs* FileTask::_internal_mutable_args() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.args_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::pb::VideoCommonArgs>(GetArena());
    _impl_.args_ = reinterpret_cast<::pb::VideoCommonArgs*>(p);
  }
  return _impl_.args_;
}
inline ::pb::VideoCommonArgs* FileTask::mutable_args() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::pb::VideoCommonArgs* _msg = _internal_mutable_args();
  // @@protoc_insertion_point(field_mutable:pb.FileTask.args)
  return _msg;
}
inline void FileTask::set_allocated_args(::pb::VideoCommonArgs* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.args_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.args_ = reinterpret_cast<::pb::VideoCommonArgs*>(value);
  // @@protoc_insertion_point(field_set_allocated:pb.FileTask.args)
}

// repeated .pb.DetectionAlgorithm algorithms = 2;
inline int FileTask::_internal_algorithms_size() const {
  return _internal_algorithms().size();
}
inline int FileTask::algorithms_size() const {
  return _internal_algorithms_size();
}
inline void FileTask::clear_algorithms() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.algorithms_.Clear();
}
inline ::pb::DetectionAlgorithm FileTask::algorithms(int index) const {
  // @@protoc_insertion_point(field_get:pb.FileTask.algorithms)
  return static_cast<::pb::DetectionAlgorithm>(_internal_algorithms().Get(index));
}
inline void FileTask::set_algorithms(int index, ::pb::DetectionAlgorithm value) {
  _internal_mutable_algorithms()->Set(index, value);
  // @@protoc_insertion_point(field_set:pb.FileTask.algorithms)
}
inline void FileTask::add_algorithms(::pb::DetectionAlgorithm value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_algorithms()->Add(value);
  // @@protoc_insertion_point(field_add:pb.FileTask.algorithms)
}
inline const ::google::protobuf::RepeatedField<int>& FileTask::algorithms() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:pb.FileTask.algorithms)
  return _internal_algorithms();
}
inline ::google::protobuf::RepeatedField<int>* FileTask::mutable_algorithms()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:pb.FileTask.algorithms)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_algorithms();
}
inline const ::google::protobuf::RepeatedField<int>& FileTask::_internal_algorithms()
    const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.algorithms_;
}
inline ::google::protobuf::RepeatedField<int>* FileTask::_internal_mutable_algorithms() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.algorithms_;
}

// string file_path = 3;
inline void FileTask::clear_file_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.file_path_.ClearToEmpty();
}
inline const std::string& FileTask::file_path() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:pb.FileTask.file_path)
  return _internal_file_path();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void FileTask::set_file_path(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.file_path_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:pb.FileTask.file_path)
}
inline std::string* FileTask::mutable_file_path() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_file_path();
  // @@protoc_insertion_point(field_mutable:pb.FileTask.file_path)
  return _s;
}
inline const std::string& FileTask::_internal_file_path() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.file_path_.Get();
}
inline void FileTask::_internal_set_file_path(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.file_path_.Set(value, GetArena());
}
inline std::string* FileTask::_internal_mutable_file_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.file_path_.Mutable( GetArena());
}
inline std::string* FileTask::release_file_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:pb.FileTask.file_path)
  return _impl_.file_path_.Release();
}
inline void FileTask::set_allocated_file_path(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.file_path_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.file_path_.IsDefault()) {
          _impl_.file_path_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:pb.FileTask.file_path)
}

// -------------------------------------------------------------------

// ImageTask

// repeated .pb.DetectionAlgorithm algorithms = 1;
inline int ImageTask::_internal_algorithms_size() const {
  return _internal_algorithms().size();
}
inline int ImageTask::algorithms_size() const {
  return _internal_algorithms_size();
}
inline void ImageTask::clear_algorithms() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.algorithms_.Clear();
}
inline ::pb::DetectionAlgorithm ImageTask::algorithms(int index) const {
  // @@protoc_insertion_point(field_get:pb.ImageTask.algorithms)
  return static_cast<::pb::DetectionAlgorithm>(_internal_algorithms().Get(index));
}
inline void ImageTask::set_algorithms(int index, ::pb::DetectionAlgorithm value) {
  _internal_mutable_algorithms()->Set(index, value);
  // @@protoc_insertion_point(field_set:pb.ImageTask.algorithms)
}
inline void ImageTask::add_algorithms(::pb::DetectionAlgorithm value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_algorithms()->Add(value);
  // @@protoc_insertion_point(field_add:pb.ImageTask.algorithms)
}
inline const ::google::protobuf::RepeatedField<int>& ImageTask::algorithms() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:pb.ImageTask.algorithms)
  return _internal_algorithms();
}
inline ::google::protobuf::RepeatedField<int>* ImageTask::mutable_algorithms()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:pb.ImageTask.algorithms)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_algorithms();
}
inline const ::google::protobuf::RepeatedField<int>& ImageTask::_internal_algorithms()
    const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.algorithms_;
}
inline ::google::protobuf::RepeatedField<int>* ImageTask::_internal_mutable_algorithms() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.algorithms_;
}

// .pb.ImageFormat img_format = 2;
inline void ImageTask::clear_img_format() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.img_format_ = 0;
}
inline ::pb::ImageFormat ImageTask::img_format() const {
  // @@protoc_insertion_point(field_get:pb.ImageTask.img_format)
  return _internal_img_format();
}
inline void ImageTask::set_img_format(::pb::ImageFormat value) {
  _internal_set_img_format(value);
  // @@protoc_insertion_point(field_set:pb.ImageTask.img_format)
}
inline ::pb::ImageFormat ImageTask::_internal_img_format() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::pb::ImageFormat>(_impl_.img_format_);
}
inline void ImageTask::_internal_set_img_format(::pb::ImageFormat value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.img_format_ = value;
}

// bytes img = 3;
inline void ImageTask::clear_img() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.img_.ClearToEmpty();
}
inline const std::string& ImageTask::img() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:pb.ImageTask.img)
  return _internal_img();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ImageTask::set_img(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.img_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:pb.ImageTask.img)
}
inline std::string* ImageTask::mutable_img() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_img();
  // @@protoc_insertion_point(field_mutable:pb.ImageTask.img)
  return _s;
}
inline const std::string& ImageTask::_internal_img() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.img_.Get();
}
inline void ImageTask::_internal_set_img(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.img_.Set(value, GetArena());
}
inline std::string* ImageTask::_internal_mutable_img() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.img_.Mutable( GetArena());
}
inline std::string* ImageTask::release_img() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:pb.ImageTask.img)
  return _impl_.img_.Release();
}
inline void ImageTask::set_allocated_img(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.img_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.img_.IsDefault()) {
          _impl_.img_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:pb.ImageTask.img)
}

// -------------------------------------------------------------------

// OnAIResultGotReply_Result_Rect

// uint32 minX = 1;
inline void OnAIResultGotReply_Result_Rect::clear_minx() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.minx_ = 0u;
}
inline ::uint32_t OnAIResultGotReply_Result_Rect::minx() const {
  // @@protoc_insertion_point(field_get:pb.OnAIResultGotReply.Result.Rect.minX)
  return _internal_minx();
}
inline void OnAIResultGotReply_Result_Rect::set_minx(::uint32_t value) {
  _internal_set_minx(value);
  // @@protoc_insertion_point(field_set:pb.OnAIResultGotReply.Result.Rect.minX)
}
inline ::uint32_t OnAIResultGotReply_Result_Rect::_internal_minx() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.minx_;
}
inline void OnAIResultGotReply_Result_Rect::_internal_set_minx(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.minx_ = value;
}

// uint32 maxX = 2;
inline void OnAIResultGotReply_Result_Rect::clear_maxx() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.maxx_ = 0u;
}
inline ::uint32_t OnAIResultGotReply_Result_Rect::maxx() const {
  // @@protoc_insertion_point(field_get:pb.OnAIResultGotReply.Result.Rect.maxX)
  return _internal_maxx();
}
inline void OnAIResultGotReply_Result_Rect::set_maxx(::uint32_t value) {
  _internal_set_maxx(value);
  // @@protoc_insertion_point(field_set:pb.OnAIResultGotReply.Result.Rect.maxX)
}
inline ::uint32_t OnAIResultGotReply_Result_Rect::_internal_maxx() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.maxx_;
}
inline void OnAIResultGotReply_Result_Rect::_internal_set_maxx(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.maxx_ = value;
}

// uint32 minY = 3;
inline void OnAIResultGotReply_Result_Rect::clear_miny() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.miny_ = 0u;
}
inline ::uint32_t OnAIResultGotReply_Result_Rect::miny() const {
  // @@protoc_insertion_point(field_get:pb.OnAIResultGotReply.Result.Rect.minY)
  return _internal_miny();
}
inline void OnAIResultGotReply_Result_Rect::set_miny(::uint32_t value) {
  _internal_set_miny(value);
  // @@protoc_insertion_point(field_set:pb.OnAIResultGotReply.Result.Rect.minY)
}
inline ::uint32_t OnAIResultGotReply_Result_Rect::_internal_miny() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.miny_;
}
inline void OnAIResultGotReply_Result_Rect::_internal_set_miny(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.miny_ = value;
}

// uint32 maxY = 4;
inline void OnAIResultGotReply_Result_Rect::clear_maxy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.maxy_ = 0u;
}
inline ::uint32_t OnAIResultGotReply_Result_Rect::maxy() const {
  // @@protoc_insertion_point(field_get:pb.OnAIResultGotReply.Result.Rect.maxY)
  return _internal_maxy();
}
inline void OnAIResultGotReply_Result_Rect::set_maxy(::uint32_t value) {
  _internal_set_maxy(value);
  // @@protoc_insertion_point(field_set:pb.OnAIResultGotReply.Result.Rect.maxY)
}
inline ::uint32_t OnAIResultGotReply_Result_Rect::_internal_maxy() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.maxy_;
}
inline void OnAIResultGotReply_Result_Rect::_internal_set_maxy(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.maxy_ = value;
}

// -------------------------------------------------------------------

// OnAIResultGotReply_Result

// .pb.OnAIResultGotReply.Result.Rect rect = 1;
inline bool OnAIResultGotReply_Result::has_rect() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.rect_ != nullptr);
  return value;
}
inline void OnAIResultGotReply_Result::clear_rect() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.rect_ != nullptr) _impl_.rect_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::pb::OnAIResultGotReply_Result_Rect& OnAIResultGotReply_Result::_internal_rect() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::pb::OnAIResultGotReply_Result_Rect* p = _impl_.rect_;
  return p != nullptr ? *p : reinterpret_cast<const ::pb::OnAIResultGotReply_Result_Rect&>(::pb::_OnAIResultGotReply_Result_Rect_default_instance_);
}
inline const ::pb::OnAIResultGotReply_Result_Rect& OnAIResultGotReply_Result::rect() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:pb.OnAIResultGotReply.Result.rect)
  return _internal_rect();
}
inline void OnAIResultGotReply_Result::unsafe_arena_set_allocated_rect(::pb::OnAIResultGotReply_Result_Rect* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.rect_);
  }
  _impl_.rect_ = reinterpret_cast<::pb::OnAIResultGotReply_Result_Rect*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pb.OnAIResultGotReply.Result.rect)
}
inline ::pb::OnAIResultGotReply_Result_Rect* OnAIResultGotReply_Result::release_rect() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::pb::OnAIResultGotReply_Result_Rect* released = _impl_.rect_;
  _impl_.rect_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::pb::OnAIResultGotReply_Result_Rect* OnAIResultGotReply_Result::unsafe_arena_release_rect() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:pb.OnAIResultGotReply.Result.rect)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::pb::OnAIResultGotReply_Result_Rect* temp = _impl_.rect_;
  _impl_.rect_ = nullptr;
  return temp;
}
inline ::pb::OnAIResultGotReply_Result_Rect* OnAIResultGotReply_Result::_internal_mutable_rect() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.rect_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::pb::OnAIResultGotReply_Result_Rect>(GetArena());
    _impl_.rect_ = reinterpret_cast<::pb::OnAIResultGotReply_Result_Rect*>(p);
  }
  return _impl_.rect_;
}
inline ::pb::OnAIResultGotReply_Result_Rect* OnAIResultGotReply_Result::mutable_rect() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::pb::OnAIResultGotReply_Result_Rect* _msg = _internal_mutable_rect();
  // @@protoc_insertion_point(field_mutable:pb.OnAIResultGotReply.Result.rect)
  return _msg;
}
inline void OnAIResultGotReply_Result::set_allocated_rect(::pb::OnAIResultGotReply_Result_Rect* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.rect_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.rect_ = reinterpret_cast<::pb::OnAIResultGotReply_Result_Rect*>(value);
  // @@protoc_insertion_point(field_set_allocated:pb.OnAIResultGotReply.Result.rect)
}

// uint32 label = 2;
inline void OnAIResultGotReply_Result::clear_label() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.label_ = 0u;
}
inline ::uint32_t OnAIResultGotReply_Result::label() const {
  // @@protoc_insertion_point(field_get:pb.OnAIResultGotReply.Result.label)
  return _internal_label();
}
inline void OnAIResultGotReply_Result::set_label(::uint32_t value) {
  _internal_set_label(value);
  // @@protoc_insertion_point(field_set:pb.OnAIResultGotReply.Result.label)
}
inline ::uint32_t OnAIResultGotReply_Result::_internal_label() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.label_;
}
inline void OnAIResultGotReply_Result::_internal_set_label(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.label_ = value;
}

// double prob = 3;
inline void OnAIResultGotReply_Result::clear_prob() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.prob_ = 0;
}
inline double OnAIResultGotReply_Result::prob() const {
  // @@protoc_insertion_point(field_get:pb.OnAIResultGotReply.Result.prob)
  return _internal_prob();
}
inline void OnAIResultGotReply_Result::set_prob(double value) {
  _internal_set_prob(value);
  // @@protoc_insertion_point(field_set:pb.OnAIResultGotReply.Result.prob)
}
inline double OnAIResultGotReply_Result::_internal_prob() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.prob_;
}
inline void OnAIResultGotReply_Result::_internal_set_prob(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.prob_ = value;
}

// -------------------------------------------------------------------

// OnAIResultGotReply_ResultWrapper

// repeated .pb.OnAIResultGotReply.Result rs = 1;
inline int OnAIResultGotReply_ResultWrapper::_internal_rs_size() const {
  return _internal_rs().size();
}
inline int OnAIResultGotReply_ResultWrapper::rs_size() const {
  return _internal_rs_size();
}
inline void OnAIResultGotReply_ResultWrapper::clear_rs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rs_.Clear();
}
inline ::pb::OnAIResultGotReply_Result* OnAIResultGotReply_ResultWrapper::mutable_rs(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:pb.OnAIResultGotReply.ResultWrapper.rs)
  return _internal_mutable_rs()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::pb::OnAIResultGotReply_Result>* OnAIResultGotReply_ResultWrapper::mutable_rs()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:pb.OnAIResultGotReply.ResultWrapper.rs)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_rs();
}
inline const ::pb::OnAIResultGotReply_Result& OnAIResultGotReply_ResultWrapper::rs(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:pb.OnAIResultGotReply.ResultWrapper.rs)
  return _internal_rs().Get(index);
}
inline ::pb::OnAIResultGotReply_Result* OnAIResultGotReply_ResultWrapper::add_rs() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::pb::OnAIResultGotReply_Result* _add = _internal_mutable_rs()->Add();
  // @@protoc_insertion_point(field_add:pb.OnAIResultGotReply.ResultWrapper.rs)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::pb::OnAIResultGotReply_Result>& OnAIResultGotReply_ResultWrapper::rs() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:pb.OnAIResultGotReply.ResultWrapper.rs)
  return _internal_rs();
}
inline const ::google::protobuf::RepeatedPtrField<::pb::OnAIResultGotReply_Result>&
OnAIResultGotReply_ResultWrapper::_internal_rs() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.rs_;
}
inline ::google::protobuf::RepeatedPtrField<::pb::OnAIResultGotReply_Result>*
OnAIResultGotReply_ResultWrapper::_internal_mutable_rs() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.rs_;
}

// .pb.DetectionAlgorithm algo = 2;
inline void OnAIResultGotReply_ResultWrapper::clear_algo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.algo_ = 0;
}
inline ::pb::DetectionAlgorithm OnAIResultGotReply_ResultWrapper::algo() const {
  // @@protoc_insertion_point(field_get:pb.OnAIResultGotReply.ResultWrapper.algo)
  return _internal_algo();
}
inline void OnAIResultGotReply_ResultWrapper::set_algo(::pb::DetectionAlgorithm value) {
  _internal_set_algo(value);
  // @@protoc_insertion_point(field_set:pb.OnAIResultGotReply.ResultWrapper.algo)
}
inline ::pb::DetectionAlgorithm OnAIResultGotReply_ResultWrapper::_internal_algo() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::pb::DetectionAlgorithm>(_impl_.algo_);
}
inline void OnAIResultGotReply_ResultWrapper::_internal_set_algo(::pb::DetectionAlgorithm value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.algo_ = value;
}

// -------------------------------------------------------------------

// OnAIResultGotReply

// .pb.ImageFormat fmt = 1;
inline void OnAIResultGotReply::clear_fmt() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fmt_ = 0;
}
inline ::pb::ImageFormat OnAIResultGotReply::fmt() const {
  // @@protoc_insertion_point(field_get:pb.OnAIResultGotReply.fmt)
  return _internal_fmt();
}
inline void OnAIResultGotReply::set_fmt(::pb::ImageFormat value) {
  _internal_set_fmt(value);
  // @@protoc_insertion_point(field_set:pb.OnAIResultGotReply.fmt)
}
inline ::pb::ImageFormat OnAIResultGotReply::_internal_fmt() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::pb::ImageFormat>(_impl_.fmt_);
}
inline void OnAIResultGotReply::_internal_set_fmt(::pb::ImageFormat value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fmt_ = value;
}

// bytes imageData = 2;
inline void OnAIResultGotReply::clear_imagedata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.imagedata_.ClearToEmpty();
}
inline const std::string& OnAIResultGotReply::imagedata() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:pb.OnAIResultGotReply.imageData)
  return _internal_imagedata();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void OnAIResultGotReply::set_imagedata(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.imagedata_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:pb.OnAIResultGotReply.imageData)
}
inline std::string* OnAIResultGotReply::mutable_imagedata() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_imagedata();
  // @@protoc_insertion_point(field_mutable:pb.OnAIResultGotReply.imageData)
  return _s;
}
inline const std::string& OnAIResultGotReply::_internal_imagedata() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.imagedata_.Get();
}
inline void OnAIResultGotReply::_internal_set_imagedata(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.imagedata_.Set(value, GetArena());
}
inline std::string* OnAIResultGotReply::_internal_mutable_imagedata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.imagedata_.Mutable( GetArena());
}
inline std::string* OnAIResultGotReply::release_imagedata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:pb.OnAIResultGotReply.imageData)
  return _impl_.imagedata_.Release();
}
inline void OnAIResultGotReply::set_allocated_imagedata(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.imagedata_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.imagedata_.IsDefault()) {
          _impl_.imagedata_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:pb.OnAIResultGotReply.imageData)
}

// repeated .pb.OnAIResultGotReply.ResultWrapper result = 3;
inline int OnAIResultGotReply::_internal_result_size() const {
  return _internal_result().size();
}
inline int OnAIResultGotReply::result_size() const {
  return _internal_result_size();
}
inline void OnAIResultGotReply::clear_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_.Clear();
}
inline ::pb::OnAIResultGotReply_ResultWrapper* OnAIResultGotReply::mutable_result(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:pb.OnAIResultGotReply.result)
  return _internal_mutable_result()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::pb::OnAIResultGotReply_ResultWrapper>* OnAIResultGotReply::mutable_result()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:pb.OnAIResultGotReply.result)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_result();
}
inline const ::pb::OnAIResultGotReply_ResultWrapper& OnAIResultGotReply::result(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:pb.OnAIResultGotReply.result)
  return _internal_result().Get(index);
}
inline ::pb::OnAIResultGotReply_ResultWrapper* OnAIResultGotReply::add_result() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::pb::OnAIResultGotReply_ResultWrapper* _add = _internal_mutable_result()->Add();
  // @@protoc_insertion_point(field_add:pb.OnAIResultGotReply.result)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::pb::OnAIResultGotReply_ResultWrapper>& OnAIResultGotReply::result() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:pb.OnAIResultGotReply.result)
  return _internal_result();
}
inline const ::google::protobuf::RepeatedPtrField<::pb::OnAIResultGotReply_ResultWrapper>&
OnAIResultGotReply::_internal_result() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.result_;
}
inline ::google::protobuf::RepeatedPtrField<::pb::OnAIResultGotReply_ResultWrapper>*
OnAIResultGotReply::_internal_mutable_result() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.result_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace pb


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::pb::ImageFormat> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::pb::ImageFormat>() {
  return ::pb::ImageFormat_descriptor();
}
template <>
struct is_proto_enum<::pb::DetectionAlgorithm> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::pb::DetectionAlgorithm>() {
  return ::pb::DetectionAlgorithm_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_task_5fexchange_2eproto_2epb_2eh
